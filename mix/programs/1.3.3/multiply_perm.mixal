* Multiply permutations (Program A in 1.3.3)
MAXWDS    EQU  1200
PERM      ORIG *+MAXWDS
ANS       ORIG *+MAXWDS
OUTBUF    ORIG *+24
CARDS     EQU  16
PRINTER   EQU  18
SIZE      CON  0      * these three variables are put in so we don't have unknown vars
START     CON  0
BEGIN     IN   PERM(CARDS)
          ENT2 0
          LDA  EQUALS
* Load all cards and print them out
1H        JBUS *(CARDS)
          CMPA PERM+15,2
          JE   *+2
          IN   PERM+16,2(CARDS)
          ENT1 OUTBUF
          JBUS *(PRINTER)
          MOVE PERM,2(16)
          OUT  OUTBUF(PRINTER)
          JE   1F       * we have an equals sign
          INC2 16
          CMP2 =MAXWDS-16=
          JLE  1B
          HLT  * Too much input

1H        INC2 15
          ST2  SIZE
          ENT3 0
* Get next element of input
2F        LDAN PERM,3
          CMPA LPREN(1:5)
          JNE  1F
          STA  PERM,3    * we are tagging it by making it "negative"

          INC3 1
          LDXN PERM,3
          JXZ  *-2      * skip over any blank spaces

1H        CMPA RPREN(1:5)
          JNE  *+2
          STX PERM,3     * replace with next character
          INC3 1
          CMP3 SIZE
          JL   2B

          LDA LPREN
          ENT1 ANS
OPEN      ENT3 0
1H        LDXN PERM,3
          JXN  GO    * it's untagged
          INC3 1
          CMP3 SIZE
          JL 1B

* output the cards
DONE      CMP1 =ANS=
          JNE  *+2
          MOVE LPREN(2)
          MOVE =0=
          MOVE -1,1(22) * 23 words of blanks
          ENT3 0
          OUT  ANS,3(PRINTER)
          INC3 24
          LDX  ANS,3
          JXNZ *-3
          HLT

* Constants*
LPREN     ALF      (
RPREN     ALF  )
EQUALS    ALF      =

GO        MOVE LPREN
          MOVE PERM,3
          STX  START
SUCC      STX  PERM,3
          INC3 1
          LDXN PERM,3(1:5)
          JXN  1F
          JMP  *-3
5H        STX  0,1
          INC1 1
          ENT3 0
4H        CMPX PERM,3(1:5)
          JE   SUCC
1H        INC3 1
          CMP3 SIZE
          JL   4B
          CMPX START(1:5)
          JNE  5B
CLOSE     MOVE RPREN
          CMPA -3,1
          JNE  OPEN
          INC1 -3    * skip a singleton cycle
          JMP  OPEN
          END  BEGIN
