* Algorithm C for move corresponding

LEVEL       EQU     1:2
LINK        EQU     4:5
INFO        EQU     2:3
RLINK       EQU     4:5

NAME        EQU     1:1
PREV        EQU     2:3
PARENT      EQU     4:5
CHILD       EQU     2:3
SIB         EQU     4:5


MAIN        ORIG    100

            JMP     LOAD_DATA
            JMP     BUILD_TABLE
            JMP     MOVECORR
            JMP     SHOW_TABLE
            HLT


LOAD_DATA   STJ     9F
            ENTA    1
            STA     DATA(LEVEL)
            STA     DATA+7(LEVEL)

            ENTA    3
            STA     DATA+1(LEVEL)
            STA     DATA+4(LEVEL)
            STA     DATA+5(LEVEL)

            ENTA    4
            STA     DATA+6(LEVEL)

            ENTA    5
            STA     DATA+8(LEVEL)
            STA     DATA+10(LEVEL)
            STA     DATA+11(LEVEL)

            ENTA    7
            STA     DATA+2(LEVEL)
            STA     DATA+3(LEVEL)

            ENTA    8
            STA     DATA+9(LEVEL)

            ENTA    9
            STA     DATA+12(LEVEL)
            STA     DATA+13(LEVEL)
            STA     DATA+14(LEVEL)

            ENTA    SYMTABLE
            STA     DATA(LINK)
            
            ENTA    SYMTABLE+1
            STA     DATA+1(LINK)
            STA     DATA+10(LINK)

            ENTA    SYMTABLE+2
            STA     DATA+2(LINK)
            STA     DATA+11(LINK)

            ENTA    SYMTABLE+3 
            STA     DATA+3(LINK)
            STA     DATA+13(LINK)

            ENTA    SYMTABLE+4
            STA     DATA+4(LINK) 
            STA     DATA+12(LINK) 

            ENTA    SYMTABLE+5
            STA     DATA+5(LINK) 
            STA     DATA+8(LINK) 

            ENTA    SYMTABLE+6
            STA     DATA+6(LINK)
            STA     DATA+14(LINK)
            STA     DATA+9(LINK)

            ENTA    SYMTABLE+7
            STA     DATA+7(LINK)

            ENTA    10+DATATABLE 
            STA     P0
            ENTA    16+DATATABLE
            STA     Q0

9H          JMP     *

BUILD_TABLE STJ     9F
A1          ENT6    STACK
            STZ     0,6  * stack pointer
            INC6    1
            ENT5    -1    * input pointer (L,P)
            ENT4    DATATABLE-2    * data table pointer (Q)
A2          INC5    1
            INC4    2
            LDA     DATA,5 
            JAZ     9F
A3          LD2     DATA,5(LINK)  * P
            LDA     0,2(LINK)
            STA     0,4(PREV)
            ST4     0,2(LINK)
            DEC2    SYMTABLE-1
            ST2     0,4(NAME)
            INC2    SYMTABLE-1
A4          LDA     -1,6(LEVEL)  * L1
            LD2     -1,6(LINK)  * P1
            J2Z     A6
            CMPA    DATA,5(LEVEL)   * 
            JGE     A5
            ST4     1,2(CHILD) 
            JMP     A6
A5          CMPA    DATA,5(LEVEL)
            JL      ERROR  * 
            JE      A5A
            DEC6    1
            LDA     -1,6(LEVEL) * L1
            JMP     A5
A5A         LD2     -1,6(LINK)
            ST4     1,2(SIB)
            DEC6    1
            LD2     -1,6(LINK)
A6          ST2     0,4(PARENT)
            STZ     1,4(CHILD)
            STZ     1,4(SIB)
A7          LD2     DATA,5(LEVEL)
            ST2     0,6(LEVEL)
            ST4     0,6(LINK)
            INC6    1
            JMP     A2

9H          JMP     *

ERROR       LDA ERROR_LBL
            STA OUTBUF
            OUT OUTBUF(18)
            HLT

ERROR_LBL   ALF ERROR

SHOW_TABLE  STJ     9F
            ENT1    0
            JMP     PRINT_HEADER
1H          LDA     DATATABLE,1
            JAZ     9F 
            ENTA    DATATABLE,1
            DECA    DATATABLE
            SRAX    5
            DIV     =2=
            CHAR
            STX     OUTBUF

            STZ     OUTBUF+2
            LDA     DATATABLE,1(PREV)
            JAZ     2F
            DECA    DATATABLE
            SRAX    5
            DIV     =2=
            CHAR
            STX     OUTBUF+2(2:5)

2H          LDA     DATATABLE,1(PARENT)
            STZ     OUTBUF+3
            STZ     OUTBUF+4
            JAZ     2F
            DECA    DATATABLE
            SRAX    5
            DIV     =2=
            CHAR
            STX     OUTBUF+3(2:5)

2H          STZ     OUTBUF+5
            LDA     DATATABLE,1(NAME)
            STA     OUTBUF+5(3:3)
            
            LDA     DATATABLE+1,1(CHILD)
            STZ     OUTBUF+6
            JAZ     2F
            DECA    DATATABLE
            SRAX    5
            DIV     =2=
            CHAR
            STX     OUTBUF+6(2:5)

2H          LDA     DATATABLE+1,1(SIB)
            STZ     OUTBUF+7
            JAZ     2F
            DECA    DATATABLE
            SRAX    5
            DIV     =2=
            CHAR
            STX     OUTBUF+7(2:5)

2H         OUT     OUTBUF(18)

            INC1    2
            JMP     1B

9H          JMP     *

PRINT_HEADER STJ    9F
             LDA    PREV_LBL
             STA    OUTBUF+2
             LDA    PARENT_LBL
             STA    OUTBUF+3
             LDA    PARENT_LBL+1
             STA    OUTBUF+4
             LDA    NAME_LBL
             STA    OUTBUF+5 
             LDA    CHILD_LBL
             STA    OUTBUF+6
             LDA    SIB_LBL
             STA    OUTBUF+7(2:5)
             OUT    OUTBUF(18)
9H           JMP    *


MOVECORR    STJ    9F
C1          LD1    P0
            LD2    Q0
C2          LDA    1,1(CHILD)
            JAZ    C2A
            LDA    1,2(CHILD)
            JAZ    C2A

            LD1    1,1(CHILD)
            LD2    1,2(CHILD)
            JMP    C3

C2A         ENTA   0,1
            DECA   DATATABLE
            SRAX   5
            DIV    =2=
            CHAR
            STX    OUTBUF

            ENTA   0,2
            DECA   DATATABLE
            SRAX   5
            DIV    =2=
            CHAR
            STX    OUTBUF+3
            OUT    OUTBUF(18)
            JMP    C5
C3          LDA    0,1(NAME)
            CMPA   0,2(NAME)
            JE     C2

            LDA    1,2(SIB)
            JAZ    C4

            LD2    1,2(SIB)
            JMP    C3
C4          LDA    1,1(SIB)
            JAZ    C4A
            LD1    1,1(SIB)
            LD2    0,2(PARENT)
            LD2    1,2(CHILD)
            JMP    C3
C4A         LD1    0,1(PARENT)
            LD2    0,2(PARENT)
C5          CMP1   P0
            JE     9F
            JMP    C4
9H          JMP    *

DATA        ORIG    *+16
STACK       ORIG    *+20
DATATABLE   ORIG    *+32
SYMTABLE    ORIG    *+10
P0          CON     0
Q0          CON     0

PREV_LBL    ALF PREV
PARENT_LBL  ALF   PARE
            ALF NT
NAME_LBL    ALF NAME
CHILD_LBL   ALF CHILD
SIB_LBL     ALF    SIB
NOT_FOUND   ALF   NOT
            ALF FOUND
OUTBUF      ORIG *+24
            END     MAIN