* Insert into a node with suc/pred fields 
LTAG         EQU 1:1
RTAG         EQU 1:1
LLINK        EQU 2:3
RLINK        EQU 2:3
INFO1        EQU 4:5
INFO2        EQU 4:5
SUC          EQU 1:2
PRED         EQU 3:4

             ORIG 100
MAIN         JMP SETUPTREE
             ENT1 NODEK
             ENT2 NODEC
             JMP INSERT
             ENT1 NODEA
TRAV         JMP INORDER
             HLT

* I1 is node to insert, I2 is node to insert left of
INSERT       STJ 9F
             LD3 2,2(PRED) 
             LD4 0,2(LTAG)
             LD5 0,2(LLINK)

             ST3 2,1(PRED)
             ST4 0,1(LTAG)
             ST5 0,1(LLINK)
             ST2 2,1(SUC)

             ST1 2,2(PRED)
             ST1 0,2(LLINK)
             STZ 0,2(LTAG)

             ENTA 1
             STA 1,1(RTAG)

             ST1 2,3(SUC)
              
9H           JMP *

INORDER      STJ 9F
             ENT2 STACK
T2           J1Z T4
T3           ST1 0,2 
             INC2 3   * advance the stack
             LD1 0,1(LLINK)
             JMP T2
T4           CMP2 =STACK=
             JE  9F
             LD1 -3,2 * read top of stack
             DEC2 3
T5           JMP VISIT
             LD3 1,1(RTAG)
             J3P T4
             LD1 1,1(RLINK)
             JMP T2
9H           JMP *

             
* Assumes I1 contains the node
VISIT        STJ 9F
             LDA 0,1(INFO1)
             STA OUTBUF
             OUT OUTBUF(18)
9H           JMP *

SETUPTREE    STJ 9F
             ENTA NODEA
             STA  TREE(LLINK)
             ENTA NODEB
             STA  NODEA(LLINK)
             ENTA NODEC
             STA  NODEA+1(RLINK)
             ENTA NODED
             STA  NODEB(LLINK)
             ENTA NODEE
             STA  NODEC(LLINK)
             ENTA NODEF
             STA  NODEC+1(RLINK)
             ENTA NODEG
             STA  NODEE+1(RLINK)
             ENTA NODEH
             STA  NODEF(LLINK)
             ENTA NODEJ
             STA  NODEF+1(RLINK)

             ENTA 1
             STA NODEB+1(RTAG)
             STA NODED(LTAG)
             STA NODED+1(RTAG)
             STA NODEE(LTAG)
             STA NODEG(LTAG)
             STA NODEG+1(RTAG)
             STA NODEH(LTAG)
             STA NODEH+1(RTAG)
             STA NODEJ(LTAG)
             STA NODEJ+1(RTAG)
             STA TREE+1(RTAG)

             ENTA TREE
             STA 2+NODED(PRED)
             STA 2+NODEJ(SUC)

             ENTA NODEA
             STA 2+NODEB(SUC)
             STA 2+NODEE(PRED)

             ENTA NODEB
             STA 2+NODED(SUC)
             STA 2+NODEA(PRED)

             ENTA NODEC
             STA 2+NODEG(SUC)
             STA 2+NODEH(PRED)

             ENTA NODED
             STA 2+TREE(SUC)
             STA 2+NODEB(PRED)

             ENTA NODEE
             STA 2+NODEA(SUC)
             STA 2+NODEG(PRED)

             ENTA NODEF
             STA 2+NODEH(SUC)
             STA 2+NODEJ(PRED)

             ENTA NODEG
             STA 2+NODEE(SUC)
             STA 2+NODEC(PRED)
             
             ENTA NODEH
             STA 2+NODEC(SUC)
             STA 2+NODEF(PRED)
             
             ENTA NODEJ
             STA 2+NODEF(SUC)
             STA 2+TREE(PRED)

9H           JMP *


NODEA        CON 1
             CON 0
             CON 0
NODEB        CON 2
             CON 0
             CON 0
NODEC        CON 3
             CON 0
             CON 0
NODED        CON 4
             CON 0
             CON 0
NODEE        CON 5
             CON 0
             CON 0
NODEF        CON 6
             CON 0
             CON 0
NODEG        CON 7
             CON 0
             CON 0
             CON 0
NODEH        CON 8
             CON 0
             CON 0
NODEJ        CON 11 
             CON 0
             CON 0
NODEK        CON 12 
             CON 0
             CON 0
TREE         CON 0
             CON 0
             CON 0
OUTBUF       ORIG *+24 
STACK        ORIG *+100
             END MAIN
