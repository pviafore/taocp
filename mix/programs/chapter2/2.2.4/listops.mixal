           ORIG 100
LINK       EQU  4:5
ABC        EQU  0:3
A          EQU  1:1
B          EQU  2:2
C          EQU  3:3
MAIN       JMP SETUPMEM
           JMP SETUPDATA
           JMP COPY
           ST1 PTR1
           ST2 PTR2
           LD1 PTR2
           JMP PRINTPOLY

           JMP ERASE
           JMP ZERO
           JMP PRINTPOLY
           LD1 PTR1
           JMP COPY
           JMP PRINTPOLY
           LD4 PTR1
           JMP MULTPOLY
           ST2 PTR2
           LD1 PTR2
           JMP PRINTPOLY
           HLT

SETUPMEM    STJ 9F
            LD1 AVAIL
1H          ENT2 0,1
            
            INC2 2
            ST2 1,1(LINK)
            ENT1 0,2
            CMP1 =3000=
            JL   1B

9H          JMP *


SETUPDATA  STJ 9F
* head node for list 1
            LD1 AVAIL
            LDA 1,1(LINK)
            STA AVAIL

            STZ 0,1
            ENTA -1
            STA 1,1(ABC)

            ENT3 0,1  *  next link

            LD4 AVAIL
            LDA 1,4(LINK)
            STA AVAIL

            ENTA 1
            STA 0,4
            STA 1,4(ABC)
            ST3 1,4(LINK)
            ENT3 0,4
            
            LD4 AVAIL
            LDA 1,4(LINK)
            STA AVAIL

            ENTA 1
            STA 0,4
            ENTA 64 
            STA 1,4(ABC)
            ST3 1,4(LINK)
            ENT3 0,4
             
            LD4 AVAIL
            LDA 1,4(LINK)
            STA AVAIL

            ENTA 1
            STA 0,4
            LDA =4096=
            STA 1,4(ABC)
            ST3 1,4(LINK)
            ENT3 0,4
 
            ST4 1,1(LINK)
            ST1 PTR1

* head node for list 1
            LD2 AVAIL
            LDA 1,2(LINK)
            STA AVAIL
            
            STZ 0,2
            ENTA -1
            STA 1,2(ABC)

            ENT3 0,2  *  next link

            LD4 AVAIL
            LDA 1,4(LINK)
            STA AVAIL

            ENTA -1
            STA 0,4
            ENTA 1
            STA 1,4(ABC)
            ST3 1,4(LINK)
            ENT3 0,4
            
            LD4 AVAIL
            LDA 1,4(LINK)
            STA AVAIL

            ENTA -2
            STA 0,4
            ENTA 64 
            STA 1,4(ABC)
            ST3 1,4(LINK)
            ENT3 0,4
             
            LD4 AVAIL
            LDA 1,4(LINK)
            STA AVAIL

            ENTA 1
            STA 0,4
            LDA =8192=
            STA 1,4(ABC)
            ST3 1,4(LINK)
            ENT3 0,4
 
            ST4 1,2(LINK)
            ST2 PTR2


9H         JMP *

PRINTPOLY   STJ 9F
            LD3 1,1(LINK)   * leftmost node to start
            LDA 0,3
            JAZ 9F     * check if we have a zero coefficient
            ENT5 OUTBUF
            JAP 2F

            LDX MINUS
            SRAX 2
            STX 0,5(5:5)
            INC5 1

            JMP  2F

1H          LDA 0,3
            JAZ 8F     * check if we have a zero coefficient
            JAN 3F
            LDX PLUS
            JMP 4F
3H          LDX MINUS
4H          STX 3,5
            INC5 4  * move out buf up
            CMP5 =OUTBUF+24=
            JL   2F
            OUT OUTBUF(18)
            ENT6 0,1
            ENT1 OUTBUF
            MOVE EMPTY(24)
            ENT1 0,6
            ENT5 OUTBUF

2H          CHAR
            STX 0,5    * write to OUTBUF
            LDA 1,3(A) 
            ENTX 27    * X
            STX 1,5(1:1)
            CHAR
            STX 1,5(2:3)
            LDA 1,3(B) 
            ENTX 28    * Y
            STX 1,5(4:4)
            CHAR
            SRC 1
            STX 1,5(5:5)
            SLC 1
            STX 2,5(1:1)
            LDA 1,3(C) 
            ENTX 29    * Z
            STX 2,5(2:2)
            CHAR
            STX 2,5(3:4)

            LD3 1,3(LINK)

            JMP 1B
8H          OUT OUTBUF(18)
9H          JMP *


* I1 is the ptr to queue 1, I2 is ptr to queue 2
COPY        STJ 9F

            LD2 AVAIL
            LDA 1,2(LINK)
            STA AVAIL

            LD3 0,1
            ST3 0,2
            LD3 1,1(ABC)
            ST3 1,2(ABC)

* first node is set

            ENT4 0,2
            ENT5 0,1 
1H          LD5 1,5(LINK)  * advance I5
            LDA 1,5(ABC)
            JAN 8F

            LD6 AVAIL
            LDA 1,6(LINK)
            STA AVAIL

            ST6 1,4(LINK)

            LDA 0,5
            STA 0,6
            LDA 1,5(ABC)
            STA 1,6(ABC)

            ENT4 0,6
            
            JMP 1B
8H          ST2 1,4(LINK)  * set the last link
9H          JMP *           

ERASE       STJ 9F
            ENT2 0,1

            LD1 1,1(LINK)

            LD3 AVAIL
            ST3 1,2(LINK)

            ST1 AVAIL
9H          JMP *


ZERO        STJ 8F
            LD1 AVAIL
            LDA 1,1(LINK)
            STA AVAIL
            STZ 0,1
            ENTA -1
            STA 1,1(ABC)
            ST1 1,1(LINK)
8H          JMP *


MULTPOLY    STJ 9F
1H          LD4 1,4(LINK)
            LDA 1,4(ABC)
            JAN 9F
            JMP ADDPOLY
            JMP 1B
9H          JMP *


* I1 is the ptr to queue 1
* I2 is ptr to queue 2
* I4 is the ptr to the multiplier term (which is needed)
ADDPOLY     STJ 9F
1H          ENT3 0,2   * I 3 is a copy of queue 2
            LD2  1,3(LINK) * I2 is now the next verson of 2
0H          LD1  1,1(LINK)  * move one ahead
SW1         LDA  1,1        * A is the value of ABC/LINK of Q1
            JAN  4F         * if it's negative, consider it a negative one
            SRC  2
            ADD  1,4(ABC)   * add the abc together
            SLC  2 
            JMP  2F 
4H          ENTA -1
            SLA  2
2H          CMPA 1,2(ABC)
            JE   9F        *  go to adding the terms together
            JG   5F        *  need to insert a new node into q2
            ENT3 0,2       * A is less than Q2's node - move onto the next element
            LD2  1,3(LINK)  * advance I2 as well
            JMP  2B
9H          JAN *           * if the abc is negative, then we should exit, otherwise add the terms
SW2         LDA  0,1        * Get coefficients
            MUL  0,4        * multiply by the current term
            SLAX 5  
            ADD  0,2        * and add them 
            STA  0,2        * and set it back
            JANZ 1B         * if hte coefficients are not zero, go to the next term
            ENT6 0,2        * we need to delete the term
            LD2  1,2(LINK)  * 2 is the next link
            LDX  AVAIL
            STX  1,6(LINK)  * put available address into the link of I6 (what we're deleting)
            ST6  AVAIL      * save back to available
            ST2  1,3(LINK)  * set the old value of I2 as the link of I3 (which was one behind)
            JMP  0B         * go back to beginning
5H          LD6  AVAIL      * we need to insert a new node
            LDX  1,6(LINK)  * get a node from available
            STX  AVAIL
            STA  1,6
SW3         LDA  0,1        * get the coefficients from queue1
            MUL  0,4        * multiply by the current term
            SLAX 5  
            STA 0,6         * and store it into the new memory
            ST2  1,6(LINK)  * same for the link for I2
            ST6  1,3(LINK)  * save the link from the previous node (which was I3)
            ENT3 0,6        * I3 (previous node) is now the new node
            JMP 0B


PTR1        CON 0
PTR2        CON 0
PLUS        ALF    +  
MINUS       ALF    -  
AVAIL       CON 1000
            ORIG 1000
MEMORY      ORIG *+2000
OUTBUF      ORIG *+24
EMPTY       ORIG *+24

            END MAIN